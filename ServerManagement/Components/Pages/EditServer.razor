@page "/servers/edit/{id:int}"
@inject NavigationManager NavigationManager

<h1>Edit Server: @Id</h1>

@if (Server is not null)
{
    <!-- Form name is required so that Blazor could distinguish different form parameters -->
    <EditForm Model="@Server" FormName="editServer" OnValidSubmit="Submit">

        <!-- Enables the table to use model attributes for validation-->
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <!-- This field is only used so that we have a way of passing the server id on form submit -->
        <InputNumber @bind-Value="Server.Id" hidden></InputNumber>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="Server.Name" class="form-control"></InputText>
            </div>
            <div class="col">
                <!-- We can also attach validation messages to individual fields -->
                <ValidationMessage For="() => Server.Name"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="Server.City" class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => Server.City"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="Server.IsOnline" class="form-check-input"></InputCheckbox>
            </div>
        </div>
        <br>

        <button class="btn btn-primary" type="submit">Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Go back</a>
    </EditForm>
}

@code {
    // here the form name is actually optional, however it becomes
    // required if we have more then one form in a component
    [SupplyParameterFromForm(FormName = "editServer")]
    public Server Server  { get; set; }

    [Parameter]
    public int Id { get; set; }

    protected override void OnParametersSet()
    {
        Server ??= ServersRepository.GetServerById(Id);
        base.OnParametersSet();
    }

    private void Submit()
    {
        if (Server is not null)
        {
            ServersRepository.UpdateServer(Server.Id, Server);
            NavigationManager.NavigateTo("/servers");
        }
    }
}
